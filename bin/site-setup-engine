#!/bin/bash
# 29.08.2015

. /usr/share/site-setup/lib/optparse

add_arglim 0
add_option engine -i None "Engine source (tgz url, tgz file or directory), default: empty"
add_option domain -d "" "Site main domain"
add_option user -u "" "Site user"
add_option db -b "" "DB name"
add_option db_source -j "" "DB name"
add_option db_pass -p None "DB password"

add_flag rewrite -r False "Purge installed site before install"

add_flag verbose -v False "Verbose output"
add_flag debug -m False "Debug"

parseargs $@
. /usr/share/site-setup/lib/init
set -eu


site_setup_engine() {
	# variables from optparse
	USER="$USER"
	DOMAIN="$DOMAIN"
	REWRITE="$REWRITE"
	DEBUG="$DEBUG"
	ENGINE="$ENGINE"
	DB="$DB"
	DB_SOURCE="$DB_SOURCE"
	DB_PASS="$DB_PASS"

	# variables from config
	wwwdir="$wwwdir"
	sitedir="$sitedir"
	sitedir_old="$sitedir_old"
	homedir="$homedir"
	test_directory="$test_directory"

	if [ -z "$DOMAIN" ] || [ -z "$ENGINE" ] || [ -z "$USER" ]; then
		if [ -z "$DOMAIN" ]; then echo "--domain required"; fi
		if [ -z "$ENGINE" ]; then echo "--engine required"; fi
		if [ -z "$USER" ]; then echo "--user required"; fi
		exit 1
	fi

	if [ $(getent passwd "$USER" | wc -l) = 0 ]; then
		echo "User $USER not exists, aborting."
		exit 1
	fi

	# backup exists site to _old directory
	if [ -d "$sitedir" ]; then
		if [ "$REWRITE" = True ]; then
			if [ -d "$sitedir_old" ]; then
				is_verbose && echo rm -rf "$sitedir_old"
				rm -rf "$sitedir_old"
			fi

			if [ "$DEBUG" = True ]; then
				echo rm -rf "$sitedir"
				rm -rf "$sitedir"
			else
				is_verbose && echo "move old site to $sitedir_old"
				is_verbose && echo mv "$sitedir" "$sitedir_old"
				mv "$sitedir" "$sitedir_old"
			fi
		else
			echo "Directory $sitedir exists, do nothing."
			echo "If you need to rewrite or update site, use --rewrite option"
			exit 1
		fi
	fi

	mkdir -p "$sitedir"

	# empty engine
	if [ "$ENGINE" = None ]; then
		# ничего не делаем
		is_verbose && echo "empty engine"
		cd "$sitedir"

	# latest drupal
	elif [ "$ENGINE" = "drupal" ]; then
		is_verbose && echo "drush dl drupal --drupal-project-rename=$DOMAIN"
		cd "$wwwdir"
		rmdir "$sitedir"
		drush dl drupal --drupal-project-rename="$DOMAIN"
		cd "$sitedir"

	# project from drupal.org
	elif [ $(echo "$ENGINE" | grep -c "project:") = 1 ]; then
		project=$(echo "$ENGINE" | sed 's/project://g')
		is_verbose && echo "drush dl $project --drupal-project-rename=$DOMAIN"
		cd "$wwwdir"
		rmdir "$sitedir"
		drush dl "$project" --drupal-project-rename="$DOMAIN"
		cd "$sitedir"

	# drush makefile
	elif [ $(echo "$ENGINE" | grep -c ".yml") = 1 ]; then
		drush_bin="drush"
		if [ command -v "drush7" >/dev/null 2>&1 ]; then
			drush_bin="drush7"
		fi
		is_verbose && echo "$drush_bin make $ENGINE $DOMAIN"
		cd "$wwwdir"
		rmdir "$sitedir"
		$drush_bin make "$ENGINE" "$DOMAIN"
		cd "$sitedir"

	# tar.gz archive
	elif [ -f "$ENGINE" ]; then
		is_verbose && echo "extract local archive"
		cd "$sitedir"
		tar -xf "$ENGINE"

	# directory
	# remote ssh path like user@example.com:/home/example/www/example.com
	elif [ -d "$ENGINE" ] || [ $(echo "$ENGINE" | grep -c "@") = 1 ]; then
		is_verbose && echo rsync --recursive --delete "$ENGINE/" "$sitedir"
		rsync --recursive --delete "$ENGINE/" "$sitedir"

		# замена доступов к БД в settings.php
		if [ "$DB_SOURCE" != "" ] && [ -f "$sitedir/sites/default/settings.php" ]; then
			is_verbose && echo "replace db access in settings.php"
			sed -i "s/'database' => '$DB_SOURCE'/'database' => '$DB'/g" "$sitedir/sites/default/settings.php"
			sed -i "s/'username' => '$DB_SOURCE'/'username' => '$USER'/g" "$sitedir/sites/default/settings.php"
			sed -i "s/'password' => '.*'/'password' => '$DB_PASS'/g" "$sitedir/sites/default/settings.php"
		fi

		cd "$sitedir"

	# url to tar.gz archive
	elif [ $(echo "$ENGINE" | grep -c ".tar.gz") = 1 ]; then
		is_verbose && echo "download engine"
		wget -O /distrib/engine.tar.gz "$ENGINE"
		cd "$sitedir"
		tar -xf /distrib/engine.tar.gz
	else
		echo "unknown engine '$ENGINE'"
		exit 1
	fi



	# if archive contains one directory, extract files from subdir to sitedir
	if [ "$(find . -mindepth 1 -maxdepth 1 | wc -l)" = 1 ]; then
		subdir=$(find "$sitedir" -mindepth 1 -maxdepth 1 -type d)
		if [ -d "$subdir" ]; then
			is_verbose && echo "extract files from subdirectory $subdir"
			find "$subdir" -mindepth 1 -maxdepth 1 -exec mv {} "$sitedir" \;
			rmdir "$subdir"
		fi
	fi

	if [ "$ENGINE" = "drupal" ]; then
		mkdir -p "$homedir/drush-backups"
	fi

	if [ $(echo "$sitedir" | grep -c "$test_directory") = 1 ]; then
		touch "$sitedir/.excluded"
	fi

	chown -R "$USER"."$USER" "$sitedir"
	find "$sitedir" -type d -exec chmod 755 {} \;
	find "$sitedir" -type f -exec chmod 644 {} \;
}

main() {
	site_setup_engine
}

main
